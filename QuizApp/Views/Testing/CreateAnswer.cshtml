@using QuizApp.ViewModel.Managing
@model  AnswerViewModel

@{
    ViewBag.Title = "Add Answer";
}

@using (Html.BeginForm("CreateAnswer", "Testing", new { questionGuid = Model.Guid }, FormMethod.Post))
{

    @Html.HiddenFor(model => model.Guid, Model.Guid)
    <div class="form-horizontal">
        <h4>AnswerViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Instance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Instance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Instance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsCorrect, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsCorrect)
                    @Html.ValidationMessageFor(model => model.IsCorrect, "", new { @class = "btn-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to LIST of Questions", "GetQuestionsByTestGuid", new { @class = "btn-danger" })
</div>

